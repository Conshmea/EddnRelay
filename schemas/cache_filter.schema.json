{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "EDDN Cache Filter Request",
  "description": "Schema for the /24-hour-cache endpoint request parameters",
  "type": "object",
  "additionalProperties": false,
  "required": ["filters"],
  "properties": {
    "filters": {
      "$ref": "#/$defs/Condition",
      "description": "The filter conditions to apply to the cached messages"
    },
    "after_timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "Optional ISO 8601 timestamp to filter messages after a specific time"
    },
    "max_items": {
      "type": "integer",
      "minimum": 1,
      "description": "Optional maximum number of messages to return"
    }
  },
  "$defs": {
    "Condition": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["exact", "regex", "all", "any", "exists"]
        },
        "path": {
          "type": "string",
          "description": "Dot-separated JSON path to apply the condition (for 'exists', 'exact' and 'regex')"
        },
        "value": {
          "description": "Exact value to match (required for 'exact')",
          "type": ["string", "number", "boolean"]
        },
        "pattern": {
          "type": "string",
          "description": "Regex pattern to match (required for 'regex')"
        },
        "conditions": {
          "type": "array",
          "items": { "$ref": "#/$defs/Condition" },
          "description": "Nested conditions (required for 'all' and 'any')"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": { "type": { "const": "exact" } }
          },
          "then": {
            "required": ["path", "value"]
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "regex" } }
          },
          "then": {
            "required": ["path", "pattern"]
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "all" } }
          },
          "then": {
            "required": ["conditions"]
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "any" } }
          },
          "then": {
            "required": ["conditions"]
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "exists" } }
          },
          "then": {
            "required": ["path"]
          }
        }
      ]
    }
  },
  "examples": [
    {
      "filters": {
        "type": "all",
        "conditions": [
          {
            "type": "exists",
            "path": "message.event"
          }
        ]
      },
      "after_timestamp": "2025-06-06T17:30:00Z",
      "max_items": 1000
    },
    {
      "filters": {
        "type": "all",
        "conditions": [
          {
            "type": "exact",
            "path": "message.event",
            "value": "Scan"
          },
          {
            "type": "exists",
            "path": "message.StarSystem"
          }
        ]
      }
    }
  ]
}
